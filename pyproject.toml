[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fridapk"
version = "2.0.0"
description = "Advanced APK patcher with Frida gadget injection"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "sudo-Tiz", email = "your-email@example.com"},
]
dependencies = [
    "requests>=2.25.0",
    "frida>=16.0.0",
    "frida-tools>=12.0.0",
]

[project.scripts]
fridapk = "src.cli:main"

[project.urls]
Homepage = "https://github.com/sudo-Tiz/fridapk"
Repository = "https://github.com/sudo-Tiz/fridapk"
Issues = "https://github.com/sudo-Tiz/fridapk/issues"

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "workspace",
]

[tool.ruff.lint]
# Enable specific rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # flake8-bandit (security)
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
]

# Disable specific rules that conflict with Black or are not needed
ignore = [
    "E203",  # Whitespace before ':' (conflicts with Black)
    "E501",  # Line too long (handled by Black)
    "S101",  # Use of assert (common in development)
    "S108",  # Hardcoded temporary file/directory (needed for APK processing)
    # Security rules disabled with caution - we need shell commands for APK processing
    "S602",  # subprocess with shell=True (needed for command execution - BE CAREFUL)
    "S603",  # subprocess without shell=True (we validate input)
    "S607",  # Starting a process with partial executable path (aapt, keytool, etc.)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Per-file ignores for specific cases
[tool.ruff.lint.per-file-ignores]
# Main processing files need Path operations and error handling flexibility
"src/main.py" = ["PTH123"]  # Keep open() for readability in main processing
"src/core/apk_processor.py" = ["PTH123", "B904"]  # APK processing needs flexibility
"src/core/gadgets.py" = ["PTH123", "B904"]  # File downloads need standard open()

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src"]
